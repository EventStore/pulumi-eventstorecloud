// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventstorecloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PeeringProviderMetadata struct {
	AwsPeeringLinkId *string `pulumi:"awsPeeringLinkId"`
	GcpNetworkId     *string `pulumi:"gcpNetworkId"`
	GcpNetworkName   *string `pulumi:"gcpNetworkName"`
	GcpProjectId     *string `pulumi:"gcpProjectId"`
}

// PeeringProviderMetadataInput is an input type that accepts PeeringProviderMetadataArgs and PeeringProviderMetadataOutput values.
// You can construct a concrete instance of `PeeringProviderMetadataInput` via:
//
//          PeeringProviderMetadataArgs{...}
type PeeringProviderMetadataInput interface {
	pulumi.Input

	ToPeeringProviderMetadataOutput() PeeringProviderMetadataOutput
	ToPeeringProviderMetadataOutputWithContext(context.Context) PeeringProviderMetadataOutput
}

type PeeringProviderMetadataArgs struct {
	AwsPeeringLinkId pulumi.StringPtrInput `pulumi:"awsPeeringLinkId"`
	GcpNetworkId     pulumi.StringPtrInput `pulumi:"gcpNetworkId"`
	GcpNetworkName   pulumi.StringPtrInput `pulumi:"gcpNetworkName"`
	GcpProjectId     pulumi.StringPtrInput `pulumi:"gcpProjectId"`
}

func (PeeringProviderMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringProviderMetadata)(nil)).Elem()
}

func (i PeeringProviderMetadataArgs) ToPeeringProviderMetadataOutput() PeeringProviderMetadataOutput {
	return i.ToPeeringProviderMetadataOutputWithContext(context.Background())
}

func (i PeeringProviderMetadataArgs) ToPeeringProviderMetadataOutputWithContext(ctx context.Context) PeeringProviderMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringProviderMetadataOutput)
}

// PeeringProviderMetadataArrayInput is an input type that accepts PeeringProviderMetadataArray and PeeringProviderMetadataArrayOutput values.
// You can construct a concrete instance of `PeeringProviderMetadataArrayInput` via:
//
//          PeeringProviderMetadataArray{ PeeringProviderMetadataArgs{...} }
type PeeringProviderMetadataArrayInput interface {
	pulumi.Input

	ToPeeringProviderMetadataArrayOutput() PeeringProviderMetadataArrayOutput
	ToPeeringProviderMetadataArrayOutputWithContext(context.Context) PeeringProviderMetadataArrayOutput
}

type PeeringProviderMetadataArray []PeeringProviderMetadataInput

func (PeeringProviderMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeeringProviderMetadata)(nil)).Elem()
}

func (i PeeringProviderMetadataArray) ToPeeringProviderMetadataArrayOutput() PeeringProviderMetadataArrayOutput {
	return i.ToPeeringProviderMetadataArrayOutputWithContext(context.Background())
}

func (i PeeringProviderMetadataArray) ToPeeringProviderMetadataArrayOutputWithContext(ctx context.Context) PeeringProviderMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringProviderMetadataArrayOutput)
}

type PeeringProviderMetadataOutput struct{ *pulumi.OutputState }

func (PeeringProviderMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringProviderMetadata)(nil)).Elem()
}

func (o PeeringProviderMetadataOutput) ToPeeringProviderMetadataOutput() PeeringProviderMetadataOutput {
	return o
}

func (o PeeringProviderMetadataOutput) ToPeeringProviderMetadataOutputWithContext(ctx context.Context) PeeringProviderMetadataOutput {
	return o
}

func (o PeeringProviderMetadataOutput) AwsPeeringLinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeeringProviderMetadata) *string { return v.AwsPeeringLinkId }).(pulumi.StringPtrOutput)
}

func (o PeeringProviderMetadataOutput) GcpNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeeringProviderMetadata) *string { return v.GcpNetworkId }).(pulumi.StringPtrOutput)
}

func (o PeeringProviderMetadataOutput) GcpNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeeringProviderMetadata) *string { return v.GcpNetworkName }).(pulumi.StringPtrOutput)
}

func (o PeeringProviderMetadataOutput) GcpProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeeringProviderMetadata) *string { return v.GcpProjectId }).(pulumi.StringPtrOutput)
}

type PeeringProviderMetadataArrayOutput struct{ *pulumi.OutputState }

func (PeeringProviderMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeeringProviderMetadata)(nil)).Elem()
}

func (o PeeringProviderMetadataArrayOutput) ToPeeringProviderMetadataArrayOutput() PeeringProviderMetadataArrayOutput {
	return o
}

func (o PeeringProviderMetadataArrayOutput) ToPeeringProviderMetadataArrayOutputWithContext(ctx context.Context) PeeringProviderMetadataArrayOutput {
	return o
}

func (o PeeringProviderMetadataArrayOutput) Index(i pulumi.IntInput) PeeringProviderMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeeringProviderMetadata {
		return vs[0].([]PeeringProviderMetadata)[vs[1].(int)]
	}).(PeeringProviderMetadataOutput)
}

func init() {
	pulumi.RegisterOutputType(PeeringProviderMetadataOutput{})
	pulumi.RegisterOutputType(PeeringProviderMetadataArrayOutput{})
}

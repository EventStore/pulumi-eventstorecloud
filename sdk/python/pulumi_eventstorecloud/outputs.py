# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'PeeringProviderMetadata',
]

@pulumi.output_type
class PeeringProviderMetadata(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "awsPeeringLinkId":
            suggest = "aws_peering_link_id"
        elif key == "gcpNetworkId":
            suggest = "gcp_network_id"
        elif key == "gcpNetworkName":
            suggest = "gcp_network_name"
        elif key == "gcpProjectId":
            suggest = "gcp_project_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PeeringProviderMetadata. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PeeringProviderMetadata.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PeeringProviderMetadata.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 aws_peering_link_id: Optional[str] = None,
                 gcp_network_id: Optional[str] = None,
                 gcp_network_name: Optional[str] = None,
                 gcp_project_id: Optional[str] = None):
        if aws_peering_link_id is not None:
            pulumi.set(__self__, "aws_peering_link_id", aws_peering_link_id)
        if gcp_network_id is not None:
            pulumi.set(__self__, "gcp_network_id", gcp_network_id)
        if gcp_network_name is not None:
            pulumi.set(__self__, "gcp_network_name", gcp_network_name)
        if gcp_project_id is not None:
            pulumi.set(__self__, "gcp_project_id", gcp_project_id)

    @property
    @pulumi.getter(name="awsPeeringLinkId")
    def aws_peering_link_id(self) -> Optional[str]:
        return pulumi.get(self, "aws_peering_link_id")

    @property
    @pulumi.getter(name="gcpNetworkId")
    def gcp_network_id(self) -> Optional[str]:
        return pulumi.get(self, "gcp_network_id")

    @property
    @pulumi.getter(name="gcpNetworkName")
    def gcp_network_name(self) -> Optional[str]:
        return pulumi.get(self, "gcp_network_name")

    @property
    @pulumi.getter(name="gcpProjectId")
    def gcp_project_id(self) -> Optional[str]:
        return pulumi.get(self, "gcp_project_id")



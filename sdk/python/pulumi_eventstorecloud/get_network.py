# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetNetworkResult',
    'AwaitableGetNetworkResult',
    'get_network',
    'get_network_output',
]

@pulumi.output_type
class GetNetworkResult:
    """
    A collection of values returned by getNetwork.
    """
    def __init__(__self__, cidr_block=None, id=None, name=None, project_id=None, region=None, resource_provider=None):
        if cidr_block and not isinstance(cidr_block, str):
            raise TypeError("Expected argument 'cidr_block' to be a str")
        pulumi.set(__self__, "cidr_block", cidr_block)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_provider and not isinstance(resource_provider, str):
            raise TypeError("Expected argument 'resource_provider' to be a str")
        pulumi.set(__self__, "resource_provider", resource_provider)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> str:
        """
        Address space of the network in CIDR block notation
        """
        return pulumi.get(self, "cidr_block")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        Provider region in which to provision the network
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="resourceProvider")
    def resource_provider(self) -> str:
        """
        Cloud Provider in which to provision the network.
        """
        return pulumi.get(self, "resource_provider")


class AwaitableGetNetworkResult(GetNetworkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkResult(
            cidr_block=self.cidr_block,
            id=self.id,
            name=self.name,
            project_id=self.project_id,
            region=self.region,
            resource_provider=self.resource_provider)


def get_network(name: Optional[str] = None,
                project_id: Optional[str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetworkResult:
    """
    Retrieves data for an existing `Network` resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_eventstorecloud as eventstorecloud

    example = eventstorecloud.get_network(name="Example Network",
        project_id=var["project_id"])
    pulumi.export("networkCidr", example.cidr_block)
    ```
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['projectId'] = project_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('eventstorecloud:index/getNetwork:getNetwork', __args__, opts=opts, typ=GetNetworkResult).value

    return AwaitableGetNetworkResult(
        cidr_block=__ret__.cidr_block,
        id=__ret__.id,
        name=__ret__.name,
        project_id=__ret__.project_id,
        region=__ret__.region,
        resource_provider=__ret__.resource_provider)


@_utilities.lift_output_func(get_network)
def get_network_output(name: Optional[pulumi.Input[str]] = None,
                       project_id: Optional[pulumi.Input[str]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetworkResult]:
    """
    Retrieves data for an existing `Network` resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_eventstorecloud as eventstorecloud

    example = eventstorecloud.get_network(name="Example Network",
        project_id=var["project_id"])
    pulumi.export("networkCidr", example.cidr_block)
    ```
    """
    ...

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.EventStoreCloud
{
    [EventStoreCloudResourceType("eventstorecloud:index/aWSCloudWatchMetricsIntegration:AWSCloudWatchMetricsIntegration")]
    public partial class AWSCloudWatchMetricsIntegration : Pulumi.CustomResource
    {
        /// <summary>
        /// AWS IAM access key
        /// </summary>
        [Output("accessKeyId")]
        public Output<string?> AccessKeyId { get; private set; } = null!;

        /// <summary>
        /// Clusters to be used with this integration
        /// </summary>
        [Output("clusterIds")]
        public Output<ImmutableArray<string>> ClusterIds { get; private set; } = null!;

        /// <summary>
        /// Human readable description of the integration
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the CloudWatch namespace
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// ID of the project to which the integration applies
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// AWS region for group
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// AWS IAM secret access key
        /// </summary>
        [Output("secretAccessKey")]
        public Output<string?> SecretAccessKey { get; private set; } = null!;


        /// <summary>
        /// Create a AWSCloudWatchMetricsIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AWSCloudWatchMetricsIntegration(string name, AWSCloudWatchMetricsIntegrationArgs args, CustomResourceOptions? options = null)
            : base("eventstorecloud:index/aWSCloudWatchMetricsIntegration:AWSCloudWatchMetricsIntegration", name, args ?? new AWSCloudWatchMetricsIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AWSCloudWatchMetricsIntegration(string name, Input<string> id, AWSCloudWatchMetricsIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("eventstorecloud:index/aWSCloudWatchMetricsIntegration:AWSCloudWatchMetricsIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/EventStore/pulumi-eventstorecloud/releases/download/0.2.7",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AWSCloudWatchMetricsIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AWSCloudWatchMetricsIntegration Get(string name, Input<string> id, AWSCloudWatchMetricsIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new AWSCloudWatchMetricsIntegration(name, id, state, options);
        }
    }

    public sealed class AWSCloudWatchMetricsIntegrationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS IAM access key
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("clusterIds", required: true)]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// Clusters to be used with this integration
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        /// <summary>
        /// Human readable description of the integration
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Name of the CloudWatch namespace
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// ID of the project to which the integration applies
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// AWS region for group
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// AWS IAM secret access key
        /// </summary>
        [Input("secretAccessKey")]
        public Input<string>? SecretAccessKey { get; set; }

        public AWSCloudWatchMetricsIntegrationArgs()
        {
        }
    }

    public sealed class AWSCloudWatchMetricsIntegrationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS IAM access key
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        [Input("clusterIds")]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// Clusters to be used with this integration
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        /// <summary>
        /// Human readable description of the integration
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the CloudWatch namespace
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// ID of the project to which the integration applies
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// AWS region for group
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// AWS IAM secret access key
        /// </summary>
        [Input("secretAccessKey")]
        public Input<string>? SecretAccessKey { get; set; }

        public AWSCloudWatchMetricsIntegrationState()
        {
        }
    }
}
